#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };

        left_click {
            bindings = <&mkp MB1>;
            key-positions = <18 7>;
        };

        left_click_2 {
            bindings = <&mkp MB1>;
            key-positions = <18 19>;
        };

        right_click {
            bindings = <&mkp MB2>;
            key-positions = <19 20>;
        };

        middle_click {
            bindings = <&mkp MB3>;
            key-positions = <18 20 19>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q           &kp W         &kp E         &kp R          &kp T                                                 &kp Y      &kp U  &lt 5 I                 &kp O                &kp P
&mt LCTRL A     &kp S         &kp D         &kp F          &kp G        &kp ESC                     &sl 6        &kp H      &kp J  &lt 5 K                 &kp L                &mt LEFT_CONTROL SEMICOLON
&kp Z           &kp X         &kp C         &kp V          &kp B        &sl 2                       &sl 2        &kp N      &kp M  &mt LEFT_COMMAND COMMA  &mt LEFT_ALT PERIOD  &mt LEFT_SHIFT SLASH
&kp LEFT_SHIFT  &kp LEFT_ALT  &kp LEFT_WIN  &kp BACKSPACE  &lt 3 SPACE  &lt_to_layer_0 1 LANG2      &lt 1 LANG1  &kp ENTER                                                      &mt LEFT_SHIFT DELETE
            >;

            sensor-bindings = <&inc_dec_kp UP_ARROW DOWN_ARROW>;
        };

        FUNCTION {
            bindings = <
&kp F1  &kp F2   &kp F3   &kp F4  &kp F5                       &trans  &trans  &kp MINUS         &kp EQUAL          &kp INT_YEN
&kp F6  &kp F7   &kp F8   &kp F9  &kp F10  &trans      &trans  &trans  &trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &none
&trans  &kp F11  &kp F12  &trans  &trans   &trans      &trans  &trans  &trans  &kp SINGLE_QUOTE  &kp BACKSLASH      &none
&trans  &trans   &trans   &trans  &trans   &trans      &trans  &trans                                               &kp LS(NON_US_BACKSLASH)
            >;
        };

        NUM {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5                      &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0
&trans        &trans        &trans        &trans        &trans        &trans      &trans  &trans        &trans        &trans        &trans        &trans
&trans        &trans        &trans        &trans        &trans        &trans      &trans  &trans        &trans        &trans        &trans        &trans
&trans        &trans        &trans        &trans        &trans        &trans      &trans  &trans                                                  &trans
            >;
        };

        ARROW {
            bindings = <
&trans    &trans                  &kp UP_ARROW    &trans                   &trans                       &trans  &trans          &kp UP_ARROW    &trans           &trans
&kp HOME  &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans
&trans    &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &trans          &trans          &trans           &trans
&trans    &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                                                   &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
